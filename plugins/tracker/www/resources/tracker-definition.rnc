include "artifact-definition.rnc"
include "triggers.rnc"

trackers =
    attribute use-natures { xsd:boolean }?,
    element tracker {
        tracker
    }*,
    element triggers {
        triggers
    }?,

    element references {
        element reference {
            attribute source { xsd:string } &
            attribute target { xsd:string }
        }*
    }?


tracker =
        # old ids
        attribute id { xsd:string }?,
        attribute parent_id { xsd:string }?,
        attribute group_id { xsd:long }?,
        # these attributes should be optional and have default values
        attribute allow_copy { "0" | "1" }?, # default is false
        attribute enable_emailgateway { "0" | "1" }?, # default is false
        attribute instantiate_for_new_projects { "0" | "1" }?, # default is false
        attribute log_priority_changes { "0" | "1" }?, # default is false
        attribute stop_notification { "0" | "1" }?, # default is false (deprecated, use notifications_level instead)
        attribute notifications_level { "0" | "1" | "2" }?, # default is 0
        attribute is_folder { xsd:boolean }?,

        # these elements are not used, they are provided by the user during the import
        element name { non_empty_string }?,
        element item_name { xsd:string { pattern = "[a-zA-Z0-9_]+" } }?,
        element description { non_empty_string }?,
        element color { xsd:string }?,

        element submit_instructions { xsd:string }?,
        element browse_instructions { xsd:string }?,


        element cannedResponses {
            element cannedResponse {
                attribute id { xsd:long }?,
                attribute tracker { xsd:long }?,
                element title { xsd:string },
                element body { xsd:string }
            }*
        },

        formElementsContent,

        element semantics {
            element semantic { semanticContent }*
        }?,

        element dependencies {
            element rule { listRuleContent }*
        }?,

        element rules {
            element date_rules {
                element rule {dateRuleContent }*
            }?,
            element list_rules {
                element rule {listRuleContent }*
            }?

        }?,

        element reports {
            element report { reportContent }*
        }?,

        element workflow {
            element field_id {
                attribute REF { xsd:IDREF }
            }?,
            element is_used {xsd:long}?,
            element transitions {
                element transition { transitionContent }*
            }?
        }*,

        element webhooks {
            element webhook {
                attribute url { xsd:string }
            }+
        }*,

        element permissions {
            element permission {
                attribute REF { xsd:IDREF }?,
                attribute scope { "tracker" | "field" },
                attribute ugroup { xsd:string },
                attribute type { xsd:string }
            }*
        }?,

        element artifacts {
            artifacts
        }?

    formElementsContent =
        element formElements {
            element formElement { formElementContent }*
        }?


    formElementContent =
        # ID is internal to the XML file
        attribute ID { xsd:ID },
        attribute rank { xsd:long },
        # id is the initial id of the exported field
        attribute id { xsd:long }?,
        attribute tracker_id { xsd:long }?,
        attribute parent_id { xsd:long }?,
        # these attributes should be optional and have  default values
        attribute use_it { "0" | "1" }?, # default is true
        attribute scope { "S" | "P" }?, # default is 'P'
        attribute required { "0" | "1" }?, # default is false
        attribute notifications { "0" | "1" }?, # default is false

        element name { xsd:string },
        element label { xsd:string },
        element description { xsd:string }?,

        element properties {
            attribute maxchars { xsd:long }?,
            attribute size { xsd:long }?,
            attribute rows { xsd:long }?,
            attribute cols { xsd:long }?,
            attribute static_value { xsd:string }?,
            attribute default_value { xsd:string }?,
            attribute hint { xsd:string }?,
            attribute target_field_name { xsd:string }?,
            attribute fast_compute  { "0" | "1" }?,
            attribute use_capacity { "0" | "1" }?,
            attribute include_weekends  { "0" | "1" }?,
            attribute display_time  { "0" | "1" }?,
            attribute use_cache  { "0" | "1" }?
        }?,

        (
            (
                attribute type { xsd:string }
            )
        |
            (
                attribute type { "fieldset" | "column" },
                formElementsContent?
            )
        |
            (
                attribute type { "sb" | "msb" | "tbl" | "cb" | "rb"},
                bindContent
            )
        )

    bindContent =
        element bind {
            (
                (
                    attribute type { "static" },
                    attribute is_rank_alpha { "0" | "1" }
                )
            |
                (
                    attribute type { "users" }
                )
            |
                (
                    attribute type { "ugroups" }
                )
            ),
            element items {
                element item {
                    attribute ID { xsd:ID }?,
                    attribute label { non_empty_string },
                    attribute is_hidden { "0" | "1" }?,
                    element description { xsd:string }?
                }*
            }?,
            element decorators {
                element decorator {
                   attribute REF { xsd:IDREF },
                   (decorator_legacy_color | attribute tlp_color_name { xsd:string })
                }*
            }?,

            element default_values {
                element value {
                    (
                        attribute REF { xsd:IDREF } |
                        tracker_user_content
                    )
                }*
            }?
        }


    decorator_legacy_color =
        attribute r { xsd:long },
        attribute g { xsd:long },
        attribute b { xsd:long }

    transitionContent =
        element from_id {
            attribute REF { xsd:string }
        },
        element to_id {
            attribute REF { xsd:string }
        },
        element postactions {
            element postaction_field_date {
                attribute valuetype { xsd:long },
                element field_id {
                    attribute REF { xsd:IDREF }
                }
            }*,
            element postaction_field_int {
                attribute value { xsd:long },
                element field_id {
                    attribute REF { xsd:IDREF }
                }
            }*,
            element postaction_field_float {
                attribute value { xsd:float },
                element field_id {
                    attribute REF { xsd:IDREF }
                }
            }*,
            element postaction_ci_build {
                attribute job_url { xsd:string }
            }*
        }?,
        (
            (
                conditionPermissionsContent
            )
        |
            (
                element conditions {
                    element condition {
                        attribute type { "perms" },
                        conditionPermissionsContent
                    }?,
                    element condition {
                        attribute type { "notempty" },
                        conditionFieldNotEmptyContent
                    }?,
                    element condition {
                        attribute type { "commentnotempty" },
                        attribute is_comment_required { "0" | "1" }
                    }?
                }?
            )
        )

    conditionPermissionsContent =
        element permissions {
            element permission {
                attribute ugroup { xsd:string }
            }*
        }

    conditionFieldNotEmptyContent =
        element field {
            attribute REF { xsd:IDREF }
        }+

    listRuleContent =
        (
            element source_field {
                attribute REF { xsd:IDREF }
            },
            element target_field {
                attribute REF { xsd:IDREF }
            },
            element source_value {
                (
                    attribute REF { xsd:IDREF }
                |
                    attribute is_none { "1" }
                )
            },
            element target_value {
                (
                    attribute REF { xsd:IDREF }
                |
                    attribute is_none { "1" }
                )
            }
        )
    dateRuleContent =
        (
            element source_field {
                attribute REF { xsd:IDREF }
            },
            element target_field {
                attribute REF { xsd:IDREF }
            },
            element comparator {
                attribute type { xsd:string }
            }
        )
    semanticContent =
        (
            (
                attribute type { "title" },
                element shortname {xsd:string},
                element label {xsd:string},
                element description {xsd:string},
                element field {
                    attribute REF { xsd:IDREF }
                }
            )
        |
             (
                 attribute type { "description" },
                 element shortname {xsd:string},
                 element label {xsd:string},
                 element description {xsd:string},
                 element field {
                     attribute REF { xsd:IDREF }
                 }
             )
        |
            (
                attribute type { "status" },
                element shortname {xsd:string},
                element label {xsd:string},
                element description {xsd:string},
                element field {
                    attribute REF { xsd:IDREF }
                },
                element open_values {
                    element open_value {
                        attribute REF { xsd:IDREF }
                    }*
                }
            )
        |
            (
                attribute type { "contributor" },
                element shortname {xsd:string},
                element label {xsd:string},
                element description {xsd:string},
                element field {
                    attribute REF { xsd:IDREF }
                }
            )
        |
            (
                attribute type { "tooltip" },
                element field {
                    attribute REF { xsd:IDREF }
                }*
            )
        |
            (
                attribute type { "initial_effort" },
                element shortname {xsd:string},
                element label {xsd:string},
                element description {xsd:string},
                element field {
                    attribute REF { xsd:IDREF }
                }
            )
        |
            (
                attribute type { "plugin_cardwall_card_fields" },
                element field {
                    attribute REF { xsd:IDREF }
                }*,
                element background-color {
                    attribute REF { xsd:IDREF }
                }?
            )
        |
            (
                attribute type { "done" },
                element shortname {xsd:string},
                element label {xsd:string},
                element description {xsd:string},
                element closed_values {
                    element closed_value {
                        attribute REF { xsd:IDREF }
                    }*
                }
            )
        |
            (
                attribute type { "velocity" },
                element shortname {xsd:string},
                element label {xsd:string},
                element description {xsd:string},
                element field {
                    attribute REF { xsd:IDREF }
                }
            )
        )


    reportContent =
        # these attributes should be optional and have  default values
        attribute is_default { "0" | "1" }?, # default is false
        attribute is_query_displayed { "0" | "1" }?, # default is true
        attribute is_in_expert_mode { "0" | "1" }?, # default is false
        attribute expert_query { xsd:string }?,
        # these ids are initial ids of the exported report
        attribute id { xsd:long }?,
        attribute tracker_id { xsd:long }?,
        attribute current_renderer_id { xsd:long }?,
        attribute user_id { xsd:long }?,
        attribute parent_report_id { xsd:long }?,

        element name { xsd:string },
        element description { xsd:string }?,

        element criterias {
            element criteria { criteriaContent }*
        },
        element renderers {
            element renderer { rendererContent }*
        }

    criteriaContent =
        attribute rank { xsd:long },
        # these attributes should be optional and have  default values
        attribute is_advanced { "0" | "1" }?, # default is false
        # these ids are initial ids of the exported report
        attribute id { xsd:long }?,
        attribute report { xsd:long }?,

        element field {
            attribute REF { xsd:IDREF }
        }

    rendererContent =
        element name { xsd:string },
        element description { xsd:string }?,
        attribute id { xsd:long }?,
        attribute report { xsd:long }?,
        attribute rank { xsd:long },
        (
            (
                attribute type { "table" },
                attribute chunksz { xsd:long },
                attribute multisort { xsd:long }?, # default is false
                element columns {
                    element field {
                        attribute REF { xsd:IDREF },
                        attribute artlink-nature { xsd:string }?,
                        attribute artlink-nature-format { xsd:string }?
                    }*
                }?,
                element sort {
                    element field {
                        attribute REF { xsd:IDREF }
                    }*
                }?
            )
        |
            (
                attribute type { "plugin_graphontrackersv5" },
                element charts {
                    element chart {
                        attribute width { xsd:long },
                        attribute height { xsd:long },
                        attribute rank { xsd:long },
                        element title { xsd:string },
                        element description { xsd:string }?,
                        (
                            (
                                attribute type { "gantt" },
                                attribute scale { xsd:string }?,
                                attribute as_of_date { xsd:string }?,
                                attribute start { xsd:IDREF }?,
                                attribute due { xsd:IDREF }?,
                                attribute finish { xsd:IDREF }?,
                                attribute righttext { xsd:IDREF }?,
                                attribute summary { xsd:IDREF }?,
                                attribute percentage { xsd:IDREF }?
                            )
                        |
                            (
                                attribute type { "pie" },
                                attribute base { xsd:IDREF }?
                            )
                        |
                            (
                                attribute type { "bar" },
                                attribute base { xsd:IDREF }?,
                                attribute group { xsd:IDREF }?
                            )
                        |
                            (
                                attribute type { "burnup" },
                                attribute start_date { xsd:string }?,
                                attribute duration { xsd:long }?,
                                attribute remaining_field{ xsd:IDREF }?,
                                attribute done_field { xsd:IDREF }?
                            )
                        |
                            (
                                attribute type { "burndown" },
                                attribute start_date { xsd:string }?,
                                attribute duration { xsd:long }?,
                                attribute effort_field{ xsd:IDREF }?
                            )
                        |
                            (
                                attribute type { "cumulative_flow" },
                                attribute start_date { xsd:string }?,
                                attribute stop_date { xsd:string }?,
                                attribute scale { xsd:string }?,
                                attribute effort_field{ xsd:IDREF }?
                            )
                        )
                    }*
                }?
            )
          |
            (
                attribute type { "plugin_cardwall" },
                attribute field_id { xsd:IDREF }?
            )
        )

non_empty_string = xsd:string { minLength = "1" pattern = "(\s*[^\s+]\s*)+" }
